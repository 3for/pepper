Installing pepper dependencies
---

= Tools
    Your distribution will likely have these as binary packages.

    Tested with Debian (Wheezy and Jessie), CentOS 7, Fedora 21, Arch 2015.03ish.

Debian:
--
  Ubuntu should be largely similar if not identical.

    apt-get install python2.7 libpython2.7 libpython2.7-dev openjdk-7-jdk \
            golang build-essential gcc g++ gcc-multilib g++-multilib ant  \
            ant-optional make time libboost-all-dev libgmp10 libgmp-dev   \
            zlib1g zlib1g-dev openmpi-bin openmpi-common libopenmpi-dev

Fedora:
--
  CentOS should be largely similar, assuming a sufficiently up-to-date release.

    yum groupinstall 'Development Tools'
    yum install python python-devel java-1.8.0-openjdk-devel golang gcc   \
        gcc-c++ glibc-devel libstdc++ glibc-devel.i686 libstdc++.i686 ant \
        make time boost boost-devel gmp gmp-devel zlib zlib-devel openmpi \
        openmpi-devel

  **IMPORTANT: on Fedora, you need to take a few more steps to use openmpi.
  You will need to set up your environment this way every time you want
  to run a Pepper computation!

    source /etc/profile.d/modules.sh
    module load mpi/openmpi-x86_64

Arch: 
--
  First, you need to enable multilib. See https://wiki.archlinux.org/index.php/multilib

    pacman -S python2 jdk7-openjdk go base-devel multilib-devel           \
           libstdc++5 lib32-glibc lib32-libstdc++5 lib32-gcc-libs         \
           gcc-libs-multilib libtool-multilib gcc-multilib apache-ant     \
           make time boost boost-libs gmp zlib openmpi
    ln -sf /usr/bin/python2 /usr/bin/python
    ln -sf /usr/bin/python2-config /usr/bin/python-config

  Note that this will change `python` from python3 (Arch default) to python2. Sorry...

Other distributions:
--
For more details, see the end of this file.



= Packages.
    We have archived known-working versions of these packages at
    https://github.com/pepper-project/thirdparty
    along with an install script.

    Please check out this repo and run the install script after
    installing the packages listed in Tools, above.

    When you've finished installing all of these, you should run
            sudo ldconfig
    for good measure.

    Finally, you will need to build LLVM/Clang with the BuffetFSM patches.
    See code/compiler/buffetfsm/README.md for more information.



= More details (hints for other distributions)

    1.  python 2.x
          Debian: apt-get install python2.7 libpython2.7 libpython2.7-dev
          Fedora: yum install python python-devel
          Arch: pacman -S python2
                ln -sf /usr/bin/python2 /usr/bin/python
                ln -sf /usr/bin/python2-config /usr/bin/python-config

    2.  java >= 1.7
          Debian: apt-get install openjdk-7-jdk
          Fedora: yum install java-1.8.0-openjdk-devel
          Arch: pacman -S jdk7-openjdk

    3.  go >= 1.0.2
          Debian: apt-get install golang
          Fedora: yum install golang
          Arch: pacman -S go

    4.  gcc, g++ >= 4.7.3 (including multilib support)
          Debian: apt-get install build-essential gcc g++ gcc-multilib g++-multilib
          Fedora: yum groupinstall 'Development Tools'
                  yum install gcc gcc-c++ glibc-devel libstdc++ glibc-devel.i686 libstdc++.i686
          Arch: pacman -S base-devel multilib-devel libstdc++5 lib32-glibc lib32-libstdc++5 lib32-gcc-libs gcc-libs-multilib libtool-multilib gcc-multilib

    5.  Apache ant
          Debian: apt-get install ant ant-optional
          Fedora: yum install ant
          Arch: pacman -S apache-ant

    7.  GNU Make
          Debian: apt-get install make
          Fedora: yum install make
          Arch: pacman -S make

    8.  GNU time
          Debian: apt-get install time
          Fedora: yum install time
          Arch: pacman -S time

    9.  Boost
          Debian: apt-get install libboost-all-dev
          Fedora: yum install boost boost-devel
          Arch: pacman -S boost boost-libs

    10. gmp (including development libraries)
          Debian: apt-get install libgmp10 libgmp-dev
          Fedora: yum install gmp gmp-devel
          Arch: pacman -S gmp

    11. zlib
          Debian: apt-get install zlib1g zlib1g-dev
          Fedora: yum install zlib zlib-devel
          Arch: pacman -S zlib

    12. MPI
          Debian: apt-get install openmpi-bin openmpi-common libopenmpi-dev
          Fedora: yum install openmpi openmpi-devel
          Arch: pacman -S openmpi

    **IMPORTANT: on Fedora, you need to take a few more steps to use openmpi.
    You will need to set up your environment this way every time you want
    to run a Pepper computation!

          source /etc/profile.d/modules.sh
          module load mpi/openmpi-x86_64

  Optional:
    1.  MySQL
            (for baseline measurements vs. Pantry database operations)

    2.  NVidia CUDA SDK
            (if you want to use the experimental GPU code,
             currently undocumented, and somewhat neglected)

    3.  subversion
            (if you want to check out a later version of clang
             for use with the BuffetFSM compiler; this is unsupported)


